# This is a demo config to showcase some of the most important commands.
# It is meant to be changed and configured, as it is intentionally kept sparse.
# For a (much) more advanced configuration example see my dotfiles:
# https://github.com/FelixKratz/dotfiles

CONFIG_DIR="$HOME/.config/sketchybar"
PLUGIN_DIR="$CONFIG_DIR/plugins"

# ensure common binary directories are in PATH for yabai, jq, sketchybar, etc.
export PATH="/usr/local/bin:/opt/homebrew/bin:/usr/bin:/bin:$PATH"

##### Bar Appearance #####
# Configuring the general appearance of the bar.
# These are only some of the options available. For all options see:
# https://felixkratz.github.io/SketchyBar/config/bar
# If you are looking for other colors, see the color picker:
# https://felixkratz.github.io/SketchyBar/config/tricks#color-picker

sketchybar --bar position=top height=40 blur_radius=30 color=0x40000000

##### Changing Defaults #####
# We now change some default values, which are applied to all further items.
# For a full list of all available item properties see:
# https://felixkratz.github.io/SketchyBar/config/items

default=(
  padding_left=5
  padding_right=5
  icon.font="Hack Nerd Font:Bold:17.0"
  label.font="Hack Nerd Font:Bold:14.0"
  icon.color=0xffffffff
  label.color=0xffffffff
  icon.padding_left=4
  icon.padding_right=4
  label.padding_left=4
  label.padding_right=4
)
sketchybar --default "${default[@]}"

##### Adding Mission Control Space Indicators #####
# Dynamically add mission control spaces (requires yabai; install 'jq' for dynamic counting).
# See https://felixkratz.github.io/SketchyBar/config/components#space----associate-mission-control-spaces-with-an-item

if command -v yabai >/dev/null 2>&1; then
  if command -v jq >/dev/null 2>&1; then
    space_count=$(yabai -m query --spaces | jq length)
  else
    space_count=4
  fi
  for sid in $(seq 1 "$space_count"); do
    space=(
      space="$sid"
      icon="‚óã"
      icon.padding_left=7
      icon.padding_right=7
      script="$PLUGIN_DIR/space.sh"
      click_script="yabai -m space --focus $sid"
    )
    sketchybar --add space space."$sid" left \
               --set space."$sid" "${space[@]}" \
               --subscribe space."$sid" space_change
  done
fi

##### Adding Left Items #####
# We add some regular items to the left side of the bar, where
# only the properties deviating from the current defaults need to be set

sketchybar --add item chevron left \
           --set chevron icon=ÔÅî label.drawing=off \
           --add item front_app left \
           --set front_app icon.drawing=off script="$PLUGIN_DIR/front_app.sh" \
           --subscribe front_app front_app_switched \
           --add item outline left \
           --set outline icon="üìù" label="Outline" click_script="open -a Outline"

##### Adding Right Items #####
# In the same way as the left items we can add items to the right side.
# Additional position (e.g. center) are available, see:
# https://felixkratz.github.io/SketchyBar/config/items#adding-items-to-sketchybar

# Some items refresh on a fixed cycle, e.g. the clock runs its script once
# every 10s. Other items respond to events they subscribe to, e.g. the
# volume.sh script is only executed once an actual change in system audio
# volume is registered. More info about the event system can be found here:
# https://felixkratz.github.io/SketchyBar/config/events

sketchybar \
  --add item clock right \
  --set clock update_freq=10 icon=Ôê∫ script="$PLUGIN_DIR/clock.sh" \
  --add item cpu right \
  --set cpu update_freq=5 icon=Ôãõ script="$PLUGIN_DIR/cpu.sh" \
  --add item memory right \
  --set memory update_freq=5 icon=Ôî∏ script="$PLUGIN_DIR/memory.sh" \
  --add item disk right \
  --set disk update_freq=300 icon=ÔÇ† script="$PLUGIN_DIR/disk.sh" \
  --add item wifi_signal right \
  --set wifi_signal update_freq=30 icon=Ôá´ script="$PLUGIN_DIR/wifi_signal.sh" \
  --add item battery right \
  --set battery update_freq=120 script="$PLUGIN_DIR/battery.sh" \
  --subscribe battery system_woke power_source_change \
  --add item volume right \
  --set volume script="$PLUGIN_DIR/volume.sh" \
  --subscribe volume volume_change

##### Force all scripts to run the first time (never do this in a script) #####
sketchybar --update
